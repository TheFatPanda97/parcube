name: Parcube CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  linting-check-types:
    name: Linting and Check-types
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            functions:
              - 'firebase/functions/**'
            app:
              - 'app/**'

      - name: App list dependencies
        if: ${{ steps.filter.outputs.app == 'true' && steps.cache-npm.outputs.cache-hit != 'true' }}
        working-directory: ./app
        continue-on-error: true
        run: npm list

      - name: App install dependencies
        if: ${{ steps.filter.outputs.app == 'true' }}
        working-directory: ./app
        run: npm install

      - name: Cloud functions list dependencies
        if: ${{ steps.filter.outputs.functions == 'true' && steps.cache-npm.outputs.cache-hit != 'true' }}
        working-directory: ./firebase/functions
        continue-on-error: true
        run: npm list

      - name: Cloud functions install dependencies
        if: ${{ steps.filter.outputs.functions == 'true' }}
        working-directory: ./firebase/functions
        run: npm install

      - name: App lint
        if: ${{ steps.filter.outputs.app == 'true' }}
        working-directory: ./app
        run: npm run lint

      - name: App check Types
        if: ${{ steps.filter.outputs.app == 'true' }}
        working-directory: ./app
        run: npm run check-types

      - name: Cloud functions lint
        if: ${{ steps.filter.outputs.functions == 'true' }}
        working-directory: ./firebase/functions
        run: npm run lint

      - name: Cloud functions check Types
        if: ${{ steps.filter.outputs.functions == 'true' }}
        working-directory: ./firebase/functions
        run: npm run check-types